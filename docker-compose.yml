version: '3.8'

services:
  zookeeper:
    image: bitnami/zookeeper:3.8
    environment:
      ALLOW_ANONYMOUS_LOGIN: 'yes'
    ports:
      - '2181:2181'
    networks:
      - backend

  kafka:
    image: bitnami/kafka:3.4
    environment:
      ALLOW_PLAINTEXT_LISTENER: 'yes'
      KAFKA_CFG_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CFG_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_CFG_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_CREATE_TOPICS: reddit_comments:1:1
    depends_on:
      - zookeeper
    ports:
      - '9092:9092'
    networks:
      - backend

  spark-master:
    image: bitnami/spark:3.4
    environment:
      SPARK_MODE: master
      SPARK_MASTER_HOST: spark-master
    ports:
      - '7077:7077'
      - '8080:8080'
    networks:
      - backend

  spark-worker:
    image: bitnami/spark:3.4
    environment:
      SPARK_MODE: worker
      SPARK_MASTER_URL: spark://spark-master:7077
    depends_on:
      - spark-master
    networks:
      - backend

  api:
    build:
      context: ./app/api
      dockerfile: Dockerfile
    env_file: .env
    ports:
      - "${API_PORT}:8000"
    depends_on:
      - kafka
    networks:
      - backend
    restart: unless-stopped

  producer:
    build:
      context: ./app/producer
      dockerfile: Dockerfile
    env_file: .env
    depends_on:
      - kafka
    networks:
      - backend
    restart: on-failure

  trans_load:
    build:
      context: ./app/transform
      dockerfile: Dockerfile
    env_file: .env
    depends_on:
      - kafka
      - spark-master
    networks:
      - backend
    volumes:
      - ./checkpoints:/tmp/checkpoints
    restart: on-failure

networks:
  backend:
    driver: bridge
